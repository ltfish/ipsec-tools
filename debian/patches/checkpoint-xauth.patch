See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=650176
Index: pkg-ipsec-tools/src/racoon/isakmp_cfg.c
===================================================================
--- pkg-ipsec-tools.orig/src/racoon/isakmp_cfg.c	2014-07-11 01:24:50.640779871 -0700
+++ pkg-ipsec-tools/src/racoon/isakmp_cfg.c	2014-10-13 22:29:06.856451711 -0700
@@ -498,6 +498,8 @@
 	vchar_t *reply_attr;
 	int type;
 	int error = -1;
+	int cpsc_request = 0;
+	int cpsc_handled = 0;
 
 	if ((payload = vmalloc(sizeof(*reply))) == NULL) {
 		plog(LLV_ERROR, LOCATION, NULL, "Cannot allocate memory\n");
@@ -525,6 +527,11 @@
 			case XAUTH_TYPE:
 				reply_attr = isakmp_xauth_req(iph1, attr);
 				break;
+                        case XAUTH_CPSC_TYPE:
+                                cpsc_request = 1;
+				iph1->mode_cfg->flags |= ISAKMP_CFG_VENDORID_XAUTH;
+				reply_attr = isakmp_xauth_req(iph1, attr);
+				break;
 			default:
 				plog(LLV_WARNING, LOCATION, NULL,
 				     "Ignored short attribute %s\n",
@@ -558,53 +565,70 @@
 		     "Attribute %s, len %zu\n",
 		     s_isakmp_cfg_type(type), alen);
 
-		switch(type) {
-		case INTERNAL_IP4_ADDRESS:
-		case INTERNAL_IP4_NETMASK:
-		case INTERNAL_IP4_DNS:
-		case INTERNAL_IP4_NBNS:
-		case INTERNAL_IP4_SUBNET:
-			reply_attr = isakmp_cfg_net(iph1, attr);
-			break;
+		cpsc_handled = 0;
+		if (cpsc_request) {
+		        switch(type) {
+	                case XAUTH_CPSC_TYPE:
+	                case XAUTH_CPSC_USER_NAME:
+	                case XAUTH_CPSC_USER_PASSWORD:
+	                case XAUTH_CPSC_MESSAGE:
+	                case XAUTH_CPSC_CHALLENGE:
+	                case XAUTH_CPSC_STATUS:
+				reply_attr = isakmp_xauth_req(iph1, attr);
+				cpsc_handled = 1;
+				break;
+                        }
+                }
 
-		case XAUTH_TYPE:
-		case XAUTH_USER_NAME:
-		case XAUTH_USER_PASSWORD:
-		case XAUTH_PASSCODE:
-		case XAUTH_MESSAGE:
-		case XAUTH_CHALLENGE:
-		case XAUTH_DOMAIN:
-		case XAUTH_STATUS:
-		case XAUTH_NEXT_PIN:
-		case XAUTH_ANSWER:
-			reply_attr = isakmp_xauth_req(iph1, attr);
-			break;
+		if (!cpsc_handled) {
+			switch(type) {
+			case INTERNAL_IP4_ADDRESS:
+			case INTERNAL_IP4_NETMASK:
+			case INTERNAL_IP4_DNS:
+			case INTERNAL_IP4_NBNS:
+			case INTERNAL_IP4_SUBNET:
+				reply_attr = isakmp_cfg_net(iph1, attr);
+				break;
 
-		case APPLICATION_VERSION:
-			reply_attr = isakmp_cfg_string(iph1, 
-			    attr, ISAKMP_CFG_RACOON_VERSION);
-			break;
+			case XAUTH_TYPE:
+			case XAUTH_USER_NAME:
+			case XAUTH_USER_PASSWORD:
+			case XAUTH_PASSCODE:
+			case XAUTH_MESSAGE:
+			case XAUTH_CHALLENGE:
+			case XAUTH_DOMAIN:
+			case XAUTH_STATUS:
+			case XAUTH_NEXT_PIN:
+			case XAUTH_ANSWER:
+				reply_attr = isakmp_xauth_req(iph1, attr);
+				break;
 
-		case UNITY_BANNER:
-		case UNITY_PFS:
-		case UNITY_SAVE_PASSWD:
-		case UNITY_DEF_DOMAIN:
-		case UNITY_DDNS_HOSTNAME:
-		case UNITY_FW_TYPE:
-		case UNITY_SPLITDNS_NAME:
-		case UNITY_SPLIT_INCLUDE:
-		case UNITY_LOCAL_LAN:
-		case UNITY_NATT_PORT:
-		case UNITY_BACKUP_SERVERS:
-			reply_attr = isakmp_unity_req(iph1, attr);
-			break;
+			case APPLICATION_VERSION:
+				reply_attr = isakmp_cfg_string(iph1, 
+				attr, ISAKMP_CFG_RACOON_VERSION);
+				break;
 
-		case INTERNAL_ADDRESS_EXPIRY:
-		default:
-			plog(LLV_WARNING, LOCATION, NULL,
-			     "Ignored attribute %s\n",
-			     s_isakmp_cfg_type(type));
-			break;
+			case UNITY_BANNER:
+			case UNITY_PFS:
+			case UNITY_SAVE_PASSWD:
+			case UNITY_DEF_DOMAIN:
+			case UNITY_DDNS_HOSTNAME:
+			case UNITY_FW_TYPE:
+			case UNITY_SPLITDNS_NAME:
+			case UNITY_SPLIT_INCLUDE:
+			case UNITY_LOCAL_LAN:
+			case UNITY_NATT_PORT:
+			case UNITY_BACKUP_SERVERS:
+				reply_attr = isakmp_unity_req(iph1, attr);
+				break;
+
+			case INTERNAL_ADDRESS_EXPIRY:
+			default:
+				plog(LLV_WARNING, LOCATION, NULL,
+				"Ignored attribute %s\n",
+				s_isakmp_cfg_type(type));
+				break;
+			}
 		}
 
 		npp = (char *)attr;
@@ -690,6 +714,8 @@
 		
 		switch (type & ~ISAKMP_GEN_MASK) {
 		case XAUTH_STATUS:
+		case XAUTH_CPSC_STATUS:
+		case XAUTH_CPSC_MESSAGE:		
 			reply_attr = isakmp_xauth_set(iph1, attr);
 			break;
 		default:
@@ -1733,9 +1759,25 @@
 		UNITY_LOCAL_LAN,
 		APPLICATION_VERSION,
 	};
+	int attrlen[] = {
+	        4,
+	        4,
+	        4,
+	        4,
+	        0,
+	        0,
+	        0,
+	        0,
+	        0,
+	        0,
+        };
 
 	attrcount = sizeof(attrlist) / sizeof(*attrlist);
 	len = sizeof(*attrpl) + sizeof(*attr) * attrcount;
+	
+	for (i = 0; i < attrcount; i++) {
+	        len += attrlen[i];
+        }
 	    
 	if ((buffer = vmalloc(len)) == NULL) {
 		plog(LLV_ERROR, LOCATION, NULL, "Cannot allocate memory\n");
@@ -1751,8 +1793,9 @@
 
 	for (i = 0; i < attrcount; i++) {
 		attr->type = htons(attrlist[i]);
-		attr->lorv = htons(0);
+		attr->lorv = htons(attrlen[i]);
 		attr++;
+		attr = (struct isakmp_data *) ((char*) attr + attrlen[i]);
 	}
 
 	plog(LLV_DEBUG, LOCATION, NULL, 
Index: pkg-ipsec-tools/src/racoon/isakmp_xauth.c
===================================================================
--- pkg-ipsec-tools.orig/src/racoon/isakmp_xauth.c	2014-07-11 01:24:50.640779871 -0700
+++ pkg-ipsec-tools/src/racoon/isakmp_xauth.c	2014-10-13 22:29:06.856451711 -0700
@@ -1472,6 +1472,7 @@
 	/* Sanity checks */
 	switch(type) {
 	case XAUTH_TYPE:
+	case XAUTH_CPSC_TYPE:
 		if ((ntohs(attr->type) & ISAKMP_GEN_TV) == 0) {
 			plog(LLV_ERROR, LOCATION, NULL, 
 			    "Unexpected long XAUTH_TYPE attribute\n");
@@ -1489,6 +1490,7 @@
 		break;
 
 	case XAUTH_USER_NAME:
+	case XAUTH_CPSC_USER_NAME:
 		if (!iph1->rmconf->xauth || !iph1->rmconf->xauth->login) {
 			plog(LLV_ERROR, LOCATION, NULL, "Xauth performed "
 			    "with no login supplied\n");
@@ -1499,6 +1501,7 @@
 		iph1->rmconf->xauth->state |= XAUTH_SENT_USERNAME;
 		break;
 
+	case XAUTH_CPSC_USER_PASSWORD:
 	case XAUTH_USER_PASSWORD:
 		if (!iph1->rmconf->xauth || !iph1->rmconf->xauth->login)
 			return NULL;
@@ -1536,6 +1539,7 @@
 
 		break;
 	case XAUTH_MESSAGE:
+	case XAUTH_CPSC_MESSAGE:
 		if ((ntohs(attr->type) & ISAKMP_GEN_TV) == 0) {
 			dlen = ntohs(attr->lorv);
 			if (dlen > 0) {
@@ -1579,6 +1583,7 @@
 
 	switch(type) {
 	case XAUTH_USER_NAME:
+	case XAUTH_CPSC_USER_NAME:
 		/* 
 		 * iph1->rmconf->xauth->login->v is valid, 
 		 * we just checked it in the previous switch case 
@@ -1586,6 +1591,7 @@
 		memcpy(data, iph1->rmconf->xauth->login->v, dlen);
 		break;
 	case XAUTH_USER_PASSWORD:
+	case XAUTH_CPSC_USER_PASSWORD:
 		memcpy(data, pwd->v, dlen);
 		break;
 	default:
@@ -1622,6 +1628,7 @@
 
 	switch(type) {
 	case XAUTH_STATUS:
+	case XAUTH_CPSC_STATUS:
 		/* 
 		 * We should only receive ISAKMP mode_cfg SET XAUTH_STATUS
 		 * when running as a client (initiator).
@@ -1660,6 +1667,7 @@
 		/* We acknowledge it */
 		break;
 	case XAUTH_MESSAGE:
+	case XAUTH_CPSC_MESSAGE:
 		if ((ntohs(attr->type) & ISAKMP_GEN_TV) == 0) {
 			dlen = ntohs(attr->lorv);
 			if (dlen > 0) {
@@ -1676,7 +1684,7 @@
 				racoon_free(mdata);
 			}
 		}
-
+		return NULL;
 	default:
 		plog(LLV_WARNING, LOCATION, NULL,
 		    "Ignored attribute %s\n", s_isakmp_cfg_type(type));
Index: pkg-ipsec-tools/src/racoon/isakmp_xauth.h
===================================================================
--- pkg-ipsec-tools.orig/src/racoon/isakmp_xauth.h	2014-04-22 22:21:21.789043854 -0700
+++ pkg-ipsec-tools/src/racoon/isakmp_xauth.h	2014-10-13 22:29:06.856451711 -0700
@@ -58,6 +58,16 @@
 #define	XAUTH_STATUS_FAIL       0
 #define	XAUTH_STATUS_OK         1
 
+/* ISAKMP mode config attribute types specific to CPSC */
+#define XAUTH_CPSC_TYPE			13
+#define XAUTH_CPSC_USER_NAME		14
+#define XAUTH_CPSC_USER_PASSWORD	15
+#define XAUTH_CPSC_PASSCODE		16
+#define XAUTH_CPSC_MESSAGE		17
+#define XAUTH_CPSC_CHALLENGE		18
+#define XAUTH_CPSC_DOMAIN		19
+#define XAUTH_CPSC_STATUS		20
+
 /* For phase 1 Xauth status */
 struct xauth_state {
 	int status; /* authentication status, used only on server side */
